(function () {
  // Use browser API for Firefox compatibility
  const api = typeof browser !== 'undefined' ? browser : chrome;

  const storage = {
    get(keys) {
      return new Promise((resolve) => {
        try {
          api.storage.sync.get(keys, (items) => {
            if (api.runtime.lastError) {
              resolve({});
              return;
            }
            resolve(items || {});
          });
        } catch (e) {
          resolve({});
        }
      });
    },
    set(items) {
      return new Promise((resolve) => {
        try {
          api.storage.sync.set(items, () => resolve());
        } catch (e) {
          resolve();
        }
      });
    }
  };

  function showStatus(message, type = 'success') {
    const status = document.getElementById('status');
    status.textContent = message;
    status.className = `status ${type}`;
    status.style.display = 'block';

    setTimeout(() => {
      status.style.display = 'none';
    }, 3000);
  }



  function openOptions() {
    api.runtime.openOptionsPage();
    window.close();
  }



  // Event listeners
  document.addEventListener('DOMContentLoaded', () => {
    // Open options button
    document.getElementById('openOptions').addEventListener('click', (e) => {
      e.preventDefault();
      openOptions();
    });
  });
})();
